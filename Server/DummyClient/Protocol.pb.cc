// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR CTS_LOGIN::CTS_LOGIN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pw_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_LOGINDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_LOGINDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_LOGINDefaultTypeInternal() {}
  union {
    CTS_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_LOGINDefaultTypeInternal _CTS_LOGIN_default_instance_;
PROTOBUF_CONSTEXPR STC_LOGIN::STC_LOGIN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_LOGINDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_LOGINDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_LOGINDefaultTypeInternal() {}
  union {
    STC_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_LOGINDefaultTypeInternal _STC_LOGIN_default_instance_;
PROTOBUF_CONSTEXPR CTS_ENTER_LOBBY::CTS_ENTER_LOBBY(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_ENTER_LOBBYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_ENTER_LOBBYDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_ENTER_LOBBYDefaultTypeInternal() {}
  union {
    CTS_ENTER_LOBBY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_ENTER_LOBBYDefaultTypeInternal _CTS_ENTER_LOBBY_default_instance_;
PROTOBUF_CONSTEXPR STC_ENTER_LOBBY::STC_ENTER_LOBBY(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_ENTER_LOBBYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_ENTER_LOBBYDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_ENTER_LOBBYDefaultTypeInternal() {}
  union {
    STC_ENTER_LOBBY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_ENTER_LOBBYDefaultTypeInternal _STC_ENTER_LOBBY_default_instance_;
PROTOBUF_CONSTEXPR CTS_JOIN_OR_CREATE_ROOM::CTS_JOIN_OR_CREATE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_.roomindex_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_JOIN_OR_CREATE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_JOIN_OR_CREATE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_JOIN_OR_CREATE_ROOMDefaultTypeInternal() {}
  union {
    CTS_JOIN_OR_CREATE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_JOIN_OR_CREATE_ROOMDefaultTypeInternal _CTS_JOIN_OR_CREATE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR STC_JOIN_OR_CREATE_ROOM::STC_JOIN_OR_CREATE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_.roomindex_)*/uint64_t{0u}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_JOIN_OR_CREATE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_JOIN_OR_CREATE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_JOIN_OR_CREATE_ROOMDefaultTypeInternal() {}
  union {
    STC_JOIN_OR_CREATE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_JOIN_OR_CREATE_ROOMDefaultTypeInternal _STC_JOIN_OR_CREATE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR CTS_ENTER_ROOM::CTS_ENTER_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_ENTER_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_ENTER_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_ENTER_ROOMDefaultTypeInternal() {}
  union {
    CTS_ENTER_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_ENTER_ROOMDefaultTypeInternal _CTS_ENTER_ROOM_default_instance_;
PROTOBUF_CONSTEXPR STC_ENTER_ROOM::STC_ENTER_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_ENTER_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_ENTER_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_ENTER_ROOMDefaultTypeInternal() {}
  union {
    STC_ENTER_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_ENTER_ROOMDefaultTypeInternal _STC_ENTER_ROOM_default_instance_;
PROTOBUF_CONSTEXPR CTS_ENTER_GAME::CTS_ENTER_GAME(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playerindex_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_ENTER_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_ENTER_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_ENTER_GAMEDefaultTypeInternal() {}
  union {
    CTS_ENTER_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_ENTER_GAMEDefaultTypeInternal _CTS_ENTER_GAME_default_instance_;
PROTOBUF_CONSTEXPR STC_ENTER_GAME::STC_ENTER_GAME(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_ENTER_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_ENTER_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_ENTER_GAMEDefaultTypeInternal() {}
  union {
    STC_ENTER_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_ENTER_GAMEDefaultTypeInternal _STC_ENTER_GAME_default_instance_;
PROTOBUF_CONSTEXPR CTS_LEAVE_ROOM::CTS_LEAVE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_LEAVE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_LEAVE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_LEAVE_ROOMDefaultTypeInternal() {}
  union {
    CTS_LEAVE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_LEAVE_ROOMDefaultTypeInternal _CTS_LEAVE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR STC_LEAVE_ROOM::STC_LEAVE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_LEAVE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_LEAVE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_LEAVE_ROOMDefaultTypeInternal() {}
  union {
    STC_LEAVE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_LEAVE_ROOMDefaultTypeInternal _STC_LEAVE_ROOM_default_instance_;
PROTOBUF_CONSTEXPR CTS_LEAVE_GAME::CTS_LEAVE_GAME(
    ::_pbi::ConstantInitialized) {}
struct CTS_LEAVE_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_LEAVE_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_LEAVE_GAMEDefaultTypeInternal() {}
  union {
    CTS_LEAVE_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_LEAVE_GAMEDefaultTypeInternal _CTS_LEAVE_GAME_default_instance_;
PROTOBUF_CONSTEXPR STC_LEAVE_GAME::STC_LEAVE_GAME(
    ::_pbi::ConstantInitialized) {}
struct STC_LEAVE_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_LEAVE_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_LEAVE_GAMEDefaultTypeInternal() {}
  union {
    STC_LEAVE_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_LEAVE_GAMEDefaultTypeInternal _STC_LEAVE_GAME_default_instance_;
PROTOBUF_CONSTEXPR STC_SPAWN::STC_SPAWN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.players_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_SPAWNDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_SPAWNDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_SPAWNDefaultTypeInternal() {}
  union {
    STC_SPAWN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_SPAWNDefaultTypeInternal _STC_SPAWN_default_instance_;
PROTOBUF_CONSTEXPR STC_DESPAWN::STC_DESPAWN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_ids_)*/{}
  , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_DESPAWNDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_DESPAWNDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_DESPAWNDefaultTypeInternal() {}
  union {
    STC_DESPAWN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_DESPAWNDefaultTypeInternal _STC_DESPAWN_default_instance_;
PROTOBUF_CONSTEXPR CTS_MOVE::CTS_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_MOVEDefaultTypeInternal() {}
  union {
    CTS_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_MOVEDefaultTypeInternal _CTS_MOVE_default_instance_;
PROTOBUF_CONSTEXPR STC_MOVE::STC_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_MOVEDefaultTypeInternal() {}
  union {
    STC_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_MOVEDefaultTypeInternal _STC_MOVE_default_instance_;
PROTOBUF_CONSTEXPR CTS_CHAT::CTS_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CTS_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CTS_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CTS_CHATDefaultTypeInternal() {}
  union {
    CTS_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CTS_CHATDefaultTypeInternal _CTS_CHAT_default_instance_;
PROTOBUF_CONSTEXPR STC_CHAT::STC_CHAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.playerid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct STC_CHATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STC_CHATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~STC_CHATDefaultTypeInternal() {}
  union {
    STC_CHAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STC_CHATDefaultTypeInternal _STC_CHAT_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Protocol_2eproto[20];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const uint32_t TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LOGIN, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LOGIN, _impl_.pw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LOGIN, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LOGIN, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_LOBBY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_LOBBY, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_LOBBY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_LOBBY, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_LOBBY, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_JOIN_OR_CREATE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_JOIN_OR_CREATE_ROOM, _impl_.roomindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_JOIN_OR_CREATE_ROOM, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_JOIN_OR_CREATE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_JOIN_OR_CREATE_ROOM, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_JOIN_OR_CREATE_ROOM, _impl_.roomindex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_JOIN_OR_CREATE_ROOM, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_ROOM, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_ROOM, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_ENTER_GAME, _impl_.playerindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_GAME, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_ENTER_GAME, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LEAVE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LEAVE_ROOM, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LEAVE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LEAVE_ROOM, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_LEAVE_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_LEAVE_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_SPAWN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_SPAWN, _impl_.players_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_DESPAWN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_DESPAWN, _impl_.object_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_MOVE, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_MOVE, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::CTS_CHAT, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_CHAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_CHAT, _impl_.playerid_),
  PROTOBUF_FIELD_OFFSET(::Protocol::STC_CHAT, _impl_.msg_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::CTS_LOGIN)},
  { 8, -1, -1, sizeof(::Protocol::STC_LOGIN)},
  { 16, -1, -1, sizeof(::Protocol::CTS_ENTER_LOBBY)},
  { 23, -1, -1, sizeof(::Protocol::STC_ENTER_LOBBY)},
  { 31, -1, -1, sizeof(::Protocol::CTS_JOIN_OR_CREATE_ROOM)},
  { 39, -1, -1, sizeof(::Protocol::STC_JOIN_OR_CREATE_ROOM)},
  { 48, -1, -1, sizeof(::Protocol::CTS_ENTER_ROOM)},
  { 55, -1, -1, sizeof(::Protocol::STC_ENTER_ROOM)},
  { 62, -1, -1, sizeof(::Protocol::CTS_ENTER_GAME)},
  { 69, -1, -1, sizeof(::Protocol::STC_ENTER_GAME)},
  { 77, -1, -1, sizeof(::Protocol::CTS_LEAVE_ROOM)},
  { 84, -1, -1, sizeof(::Protocol::STC_LEAVE_ROOM)},
  { 91, -1, -1, sizeof(::Protocol::CTS_LEAVE_GAME)},
  { 97, -1, -1, sizeof(::Protocol::STC_LEAVE_GAME)},
  { 103, -1, -1, sizeof(::Protocol::STC_SPAWN)},
  { 110, -1, -1, sizeof(::Protocol::STC_DESPAWN)},
  { 117, -1, -1, sizeof(::Protocol::CTS_MOVE)},
  { 124, -1, -1, sizeof(::Protocol::STC_MOVE)},
  { 131, -1, -1, sizeof(::Protocol::CTS_CHAT)},
  { 138, -1, -1, sizeof(::Protocol::STC_CHAT)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_CTS_LOGIN_default_instance_._instance,
  &::Protocol::_STC_LOGIN_default_instance_._instance,
  &::Protocol::_CTS_ENTER_LOBBY_default_instance_._instance,
  &::Protocol::_STC_ENTER_LOBBY_default_instance_._instance,
  &::Protocol::_CTS_JOIN_OR_CREATE_ROOM_default_instance_._instance,
  &::Protocol::_STC_JOIN_OR_CREATE_ROOM_default_instance_._instance,
  &::Protocol::_CTS_ENTER_ROOM_default_instance_._instance,
  &::Protocol::_STC_ENTER_ROOM_default_instance_._instance,
  &::Protocol::_CTS_ENTER_GAME_default_instance_._instance,
  &::Protocol::_STC_ENTER_GAME_default_instance_._instance,
  &::Protocol::_CTS_LEAVE_ROOM_default_instance_._instance,
  &::Protocol::_STC_LEAVE_ROOM_default_instance_._instance,
  &::Protocol::_CTS_LEAVE_GAME_default_instance_._instance,
  &::Protocol::_STC_LEAVE_GAME_default_instance_._instance,
  &::Protocol::_STC_SPAWN_default_instance_._instance,
  &::Protocol::_STC_DESPAWN_default_instance_._instance,
  &::Protocol::_CTS_MOVE_default_instance_._instance,
  &::Protocol::_STC_MOVE_default_instance_._instance,
  &::Protocol::_CTS_CHAT_default_instance_._instance,
  &::Protocol::_STC_CHAT_default_instance_._instance,
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\022\010Protocol\032\nEnum.proto\032\014"
  "Struct.proto\"#\n\tCTS_LOGIN\022\n\n\002id\030\001 \001(\t\022\n\n"
  "\002pw\030\002 \001(\t\"B\n\tSTC_LOGIN\022\017\n\007success\030\001 \001(\010\022"
  "$\n\006player\030\003 \001(\0132\024.Protocol.PlayerInfo\"7\n"
  "\017CTS_ENTER_LOBBY\022$\n\006player\030\001 \001(\0132\024.Proto"
  "col.PlayerInfo\"H\n\017STC_ENTER_LOBBY\022\017\n\007suc"
  "cess\030\001 \001(\010\022$\n\006player\030\002 \001(\0132\024.Protocol.Pl"
  "ayerInfo\"R\n\027CTS_JOIN_OR_CREATE_ROOM\022\021\n\tr"
  "oomIndex\030\001 \001(\004\022$\n\006player\030\002 \001(\0132\024.Protoco"
  "l.PlayerInfo\"c\n\027STC_JOIN_OR_CREATE_ROOM\022"
  "\017\n\007success\030\001 \001(\010\022\021\n\troomIndex\030\002 \001(\004\022$\n\006p"
  "layer\030\003 \001(\0132\024.Protocol.PlayerInfo\"!\n\016CTS"
  "_ENTER_ROOM\022\017\n\007success\030\001 \001(\010\"!\n\016STC_ENTE"
  "R_ROOM\022\017\n\007success\030\001 \001(\010\"%\n\016CTS_ENTER_GAM"
  "E\022\023\n\013playerIndex\030\001 \001(\004\"G\n\016STC_ENTER_GAME"
  "\022\017\n\007success\030\001 \001(\010\022$\n\006player\030\002 \001(\0132\024.Prot"
  "ocol.ObjectInfo\"!\n\016CTS_LEAVE_ROOM\022\017\n\007suc"
  "cess\030\001 \001(\010\"!\n\016STC_LEAVE_ROOM\022\017\n\007success\030"
  "\001 \001(\010\"\020\n\016CTS_LEAVE_GAME\"\020\n\016STC_LEAVE_GAM"
  "E\"2\n\tSTC_SPAWN\022%\n\007players\030\001 \003(\0132\024.Protoc"
  "ol.ObjectInfo\"!\n\013STC_DESPAWN\022\022\n\nobject_i"
  "ds\030\001 \003(\004\"+\n\010CTS_MOVE\022\037\n\004info\030\001 \001(\0132\021.Pro"
  "tocol.PosInfo\"+\n\010STC_MOVE\022\037\n\004info\030\001 \001(\0132"
  "\021.Protocol.PosInfo\"\027\n\010CTS_CHAT\022\013\n\003msg\030\001 "
  "\001(\t\")\n\010STC_CHAT\022\020\n\010playerId\030\001 \001(\004\022\013\n\003msg"
  "\030\002 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Protocol_2eproto_deps[2] = {
  &::descriptor_table_Enum_2eproto,
  &::descriptor_table_Struct_2eproto,
};
static ::_pbi::once_flag descriptor_table_Protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false, false, 1014, descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once, descriptor_table_Protocol_2eproto_deps, 2, 20,
    schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
    file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
namespace Protocol {

// ===================================================================

class CTS_LOGIN::_Internal {
 public:
};

CTS_LOGIN::CTS_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_LOGIN)
}
CTS_LOGIN::CTS_LOGIN(const CTS_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_LOGIN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.pw_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pw().empty()) {
    _this->_impl_.pw_.Set(from._internal_pw(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_LOGIN)
}

inline void CTS_LOGIN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.pw_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CTS_LOGIN::~CTS_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_LOGIN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.pw_.Destroy();
}

void CTS_LOGIN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_LOGIN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.pw_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_LOGIN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.CTS_LOGIN.id"));
        } else
          goto handle_unusual;
        continue;
      // string pw = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pw();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.CTS_LOGIN.pw"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_LOGIN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_LOGIN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.CTS_LOGIN.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string pw = 2;
  if (!this->_internal_pw().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pw().data(), static_cast<int>(this->_internal_pw().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.CTS_LOGIN.pw");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_LOGIN)
  return target;
}

size_t CTS_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_LOGIN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string pw = 2;
  if (!this->_internal_pw().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pw());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_LOGIN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_LOGIN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_LOGIN::GetClassData() const { return &_class_data_; }


void CTS_LOGIN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_LOGIN*>(&to_msg);
  auto& from = static_cast<const CTS_LOGIN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_LOGIN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_pw().empty()) {
    _this->_internal_set_pw(from._internal_pw());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_LOGIN::CopyFrom(const CTS_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_LOGIN::IsInitialized() const {
  return true;
}

void CTS_LOGIN::InternalSwap(CTS_LOGIN* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pw_, lhs_arena,
      &other->_impl_.pw_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_LOGIN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class STC_LOGIN::_Internal {
 public:
  static const ::Protocol::PlayerInfo& player(const STC_LOGIN* msg);
};

const ::Protocol::PlayerInfo&
STC_LOGIN::_Internal::player(const STC_LOGIN* msg) {
  return *msg->_impl_.player_;
}
void STC_LOGIN::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
STC_LOGIN::STC_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_LOGIN)
}
STC_LOGIN::STC_LOGIN(const STC_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_LOGIN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::PlayerInfo(*from._impl_.player_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_LOGIN)
}

inline void STC_LOGIN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_LOGIN::~STC_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.STC_LOGIN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void STC_LOGIN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_LOGIN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_LOGIN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.PlayerInfo player = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_LOGIN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_LOGIN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .Protocol.PlayerInfo player = 3;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_LOGIN)
  return target;
}

size_t STC_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_LOGIN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 3;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_LOGIN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_LOGIN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_LOGIN::GetClassData() const { return &_class_data_; }


void STC_LOGIN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_LOGIN*>(&to_msg);
  auto& from = static_cast<const STC_LOGIN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_LOGIN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::PlayerInfo::MergeFrom(
        from._internal_player());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_LOGIN::CopyFrom(const STC_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_LOGIN::IsInitialized() const {
  return true;
}

void STC_LOGIN::InternalSwap(STC_LOGIN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STC_LOGIN, _impl_.success_)
      + sizeof(STC_LOGIN::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(STC_LOGIN, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_LOGIN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class CTS_ENTER_LOBBY::_Internal {
 public:
  static const ::Protocol::PlayerInfo& player(const CTS_ENTER_LOBBY* msg);
};

const ::Protocol::PlayerInfo&
CTS_ENTER_LOBBY::_Internal::player(const CTS_ENTER_LOBBY* msg) {
  return *msg->_impl_.player_;
}
void CTS_ENTER_LOBBY::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
CTS_ENTER_LOBBY::CTS_ENTER_LOBBY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_ENTER_LOBBY)
}
CTS_ENTER_LOBBY::CTS_ENTER_LOBBY(const CTS_ENTER_LOBBY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_ENTER_LOBBY* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::PlayerInfo(*from._impl_.player_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_ENTER_LOBBY)
}

inline void CTS_ENTER_LOBBY::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_ENTER_LOBBY::~CTS_ENTER_LOBBY() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_ENTER_LOBBY)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_ENTER_LOBBY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void CTS_ENTER_LOBBY::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_ENTER_LOBBY::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_ENTER_LOBBY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_ENTER_LOBBY::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.PlayerInfo player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_ENTER_LOBBY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_ENTER_LOBBY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 1;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_ENTER_LOBBY)
  return target;
}

size_t CTS_ENTER_LOBBY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_ENTER_LOBBY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 1;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_ENTER_LOBBY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_ENTER_LOBBY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_ENTER_LOBBY::GetClassData() const { return &_class_data_; }


void CTS_ENTER_LOBBY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_ENTER_LOBBY*>(&to_msg);
  auto& from = static_cast<const CTS_ENTER_LOBBY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_ENTER_LOBBY)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::PlayerInfo::MergeFrom(
        from._internal_player());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_ENTER_LOBBY::CopyFrom(const CTS_ENTER_LOBBY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_ENTER_LOBBY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_ENTER_LOBBY::IsInitialized() const {
  return true;
}

void CTS_ENTER_LOBBY::InternalSwap(CTS_ENTER_LOBBY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.player_, other->_impl_.player_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_ENTER_LOBBY::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class STC_ENTER_LOBBY::_Internal {
 public:
  static const ::Protocol::PlayerInfo& player(const STC_ENTER_LOBBY* msg);
};

const ::Protocol::PlayerInfo&
STC_ENTER_LOBBY::_Internal::player(const STC_ENTER_LOBBY* msg) {
  return *msg->_impl_.player_;
}
void STC_ENTER_LOBBY::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
STC_ENTER_LOBBY::STC_ENTER_LOBBY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_ENTER_LOBBY)
}
STC_ENTER_LOBBY::STC_ENTER_LOBBY(const STC_ENTER_LOBBY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_ENTER_LOBBY* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::PlayerInfo(*from._impl_.player_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_ENTER_LOBBY)
}

inline void STC_ENTER_LOBBY::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_ENTER_LOBBY::~STC_ENTER_LOBBY() {
  // @@protoc_insertion_point(destructor:Protocol.STC_ENTER_LOBBY)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_ENTER_LOBBY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void STC_ENTER_LOBBY::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_ENTER_LOBBY::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_ENTER_LOBBY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_ENTER_LOBBY::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.PlayerInfo player = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_ENTER_LOBBY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_ENTER_LOBBY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .Protocol.PlayerInfo player = 2;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_ENTER_LOBBY)
  return target;
}

size_t STC_ENTER_LOBBY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_ENTER_LOBBY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 2;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_ENTER_LOBBY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_ENTER_LOBBY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_ENTER_LOBBY::GetClassData() const { return &_class_data_; }


void STC_ENTER_LOBBY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_ENTER_LOBBY*>(&to_msg);
  auto& from = static_cast<const STC_ENTER_LOBBY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_ENTER_LOBBY)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::PlayerInfo::MergeFrom(
        from._internal_player());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_ENTER_LOBBY::CopyFrom(const STC_ENTER_LOBBY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_ENTER_LOBBY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_ENTER_LOBBY::IsInitialized() const {
  return true;
}

void STC_ENTER_LOBBY::InternalSwap(STC_ENTER_LOBBY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STC_ENTER_LOBBY, _impl_.success_)
      + sizeof(STC_ENTER_LOBBY::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(STC_ENTER_LOBBY, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_ENTER_LOBBY::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// ===================================================================

class CTS_JOIN_OR_CREATE_ROOM::_Internal {
 public:
  static const ::Protocol::PlayerInfo& player(const CTS_JOIN_OR_CREATE_ROOM* msg);
};

const ::Protocol::PlayerInfo&
CTS_JOIN_OR_CREATE_ROOM::_Internal::player(const CTS_JOIN_OR_CREATE_ROOM* msg) {
  return *msg->_impl_.player_;
}
void CTS_JOIN_OR_CREATE_ROOM::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
CTS_JOIN_OR_CREATE_ROOM::CTS_JOIN_OR_CREATE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_JOIN_OR_CREATE_ROOM)
}
CTS_JOIN_OR_CREATE_ROOM::CTS_JOIN_OR_CREATE_ROOM(const CTS_JOIN_OR_CREATE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_JOIN_OR_CREATE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.roomindex_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::PlayerInfo(*from._impl_.player_);
  }
  _this->_impl_.roomindex_ = from._impl_.roomindex_;
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_JOIN_OR_CREATE_ROOM)
}

inline void CTS_JOIN_OR_CREATE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.roomindex_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_JOIN_OR_CREATE_ROOM::~CTS_JOIN_OR_CREATE_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_JOIN_OR_CREATE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void CTS_JOIN_OR_CREATE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_JOIN_OR_CREATE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _impl_.roomindex_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_JOIN_OR_CREATE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 roomIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roomindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.PlayerInfo player = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_JOIN_OR_CREATE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomIndex = 1;
  if (this->_internal_roomindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomindex(), target);
  }

  // .Protocol.PlayerInfo player = 2;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  return target;
}

size_t CTS_JOIN_OR_CREATE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 2;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  // uint64 roomIndex = 1;
  if (this->_internal_roomindex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_JOIN_OR_CREATE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_JOIN_OR_CREATE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_JOIN_OR_CREATE_ROOM::GetClassData() const { return &_class_data_; }


void CTS_JOIN_OR_CREATE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_JOIN_OR_CREATE_ROOM*>(&to_msg);
  auto& from = static_cast<const CTS_JOIN_OR_CREATE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::PlayerInfo::MergeFrom(
        from._internal_player());
  }
  if (from._internal_roomindex() != 0) {
    _this->_internal_set_roomindex(from._internal_roomindex());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_JOIN_OR_CREATE_ROOM::CopyFrom(const CTS_JOIN_OR_CREATE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_JOIN_OR_CREATE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_JOIN_OR_CREATE_ROOM::IsInitialized() const {
  return true;
}

void CTS_JOIN_OR_CREATE_ROOM::InternalSwap(CTS_JOIN_OR_CREATE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CTS_JOIN_OR_CREATE_ROOM, _impl_.roomindex_)
      + sizeof(CTS_JOIN_OR_CREATE_ROOM::_impl_.roomindex_)
      - PROTOBUF_FIELD_OFFSET(CTS_JOIN_OR_CREATE_ROOM, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_JOIN_OR_CREATE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[4]);
}

// ===================================================================

class STC_JOIN_OR_CREATE_ROOM::_Internal {
 public:
  static const ::Protocol::PlayerInfo& player(const STC_JOIN_OR_CREATE_ROOM* msg);
};

const ::Protocol::PlayerInfo&
STC_JOIN_OR_CREATE_ROOM::_Internal::player(const STC_JOIN_OR_CREATE_ROOM* msg) {
  return *msg->_impl_.player_;
}
void STC_JOIN_OR_CREATE_ROOM::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
STC_JOIN_OR_CREATE_ROOM::STC_JOIN_OR_CREATE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_JOIN_OR_CREATE_ROOM)
}
STC_JOIN_OR_CREATE_ROOM::STC_JOIN_OR_CREATE_ROOM(const STC_JOIN_OR_CREATE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_JOIN_OR_CREATE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.roomindex_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::PlayerInfo(*from._impl_.player_);
  }
  ::memcpy(&_impl_.roomindex_, &from._impl_.roomindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.roomindex_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_JOIN_OR_CREATE_ROOM)
}

inline void STC_JOIN_OR_CREATE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.roomindex_){uint64_t{0u}}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_JOIN_OR_CREATE_ROOM::~STC_JOIN_OR_CREATE_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.STC_JOIN_OR_CREATE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_JOIN_OR_CREATE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void STC_JOIN_OR_CREATE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_JOIN_OR_CREATE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_JOIN_OR_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  ::memset(&_impl_.roomindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.roomindex_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_JOIN_OR_CREATE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 roomIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.PlayerInfo player = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_JOIN_OR_CREATE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_JOIN_OR_CREATE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // uint64 roomIndex = 2;
  if (this->_internal_roomindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomindex(), target);
  }

  // .Protocol.PlayerInfo player = 3;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_JOIN_OR_CREATE_ROOM)
  return target;
}

size_t STC_JOIN_OR_CREATE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_JOIN_OR_CREATE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PlayerInfo player = 3;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  // uint64 roomIndex = 2;
  if (this->_internal_roomindex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomindex());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_JOIN_OR_CREATE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_JOIN_OR_CREATE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_JOIN_OR_CREATE_ROOM::GetClassData() const { return &_class_data_; }


void STC_JOIN_OR_CREATE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_JOIN_OR_CREATE_ROOM*>(&to_msg);
  auto& from = static_cast<const STC_JOIN_OR_CREATE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_JOIN_OR_CREATE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::PlayerInfo::MergeFrom(
        from._internal_player());
  }
  if (from._internal_roomindex() != 0) {
    _this->_internal_set_roomindex(from._internal_roomindex());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_JOIN_OR_CREATE_ROOM::CopyFrom(const STC_JOIN_OR_CREATE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_JOIN_OR_CREATE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_JOIN_OR_CREATE_ROOM::IsInitialized() const {
  return true;
}

void STC_JOIN_OR_CREATE_ROOM::InternalSwap(STC_JOIN_OR_CREATE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STC_JOIN_OR_CREATE_ROOM, _impl_.success_)
      + sizeof(STC_JOIN_OR_CREATE_ROOM::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(STC_JOIN_OR_CREATE_ROOM, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_JOIN_OR_CREATE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[5]);
}

// ===================================================================

class CTS_ENTER_ROOM::_Internal {
 public:
};

CTS_ENTER_ROOM::CTS_ENTER_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_ENTER_ROOM)
}
CTS_ENTER_ROOM::CTS_ENTER_ROOM(const CTS_ENTER_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_ENTER_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_ENTER_ROOM)
}

inline void CTS_ENTER_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_ENTER_ROOM::~CTS_ENTER_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_ENTER_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_ENTER_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CTS_ENTER_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_ENTER_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_ENTER_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_ENTER_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_ENTER_ROOM)
  return target;
}

size_t CTS_ENTER_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_ENTER_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_ENTER_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_ENTER_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_ENTER_ROOM::GetClassData() const { return &_class_data_; }


void CTS_ENTER_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_ENTER_ROOM*>(&to_msg);
  auto& from = static_cast<const CTS_ENTER_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_ENTER_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_ENTER_ROOM::CopyFrom(const CTS_ENTER_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_ENTER_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_ENTER_ROOM::IsInitialized() const {
  return true;
}

void CTS_ENTER_ROOM::InternalSwap(CTS_ENTER_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_ENTER_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[6]);
}

// ===================================================================

class STC_ENTER_ROOM::_Internal {
 public:
};

STC_ENTER_ROOM::STC_ENTER_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_ENTER_ROOM)
}
STC_ENTER_ROOM::STC_ENTER_ROOM(const STC_ENTER_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_ENTER_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_ENTER_ROOM)
}

inline void STC_ENTER_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_ENTER_ROOM::~STC_ENTER_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.STC_ENTER_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_ENTER_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void STC_ENTER_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_ENTER_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_ENTER_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_ENTER_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_ENTER_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_ENTER_ROOM)
  return target;
}

size_t STC_ENTER_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_ENTER_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_ENTER_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_ENTER_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_ENTER_ROOM::GetClassData() const { return &_class_data_; }


void STC_ENTER_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_ENTER_ROOM*>(&to_msg);
  auto& from = static_cast<const STC_ENTER_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_ENTER_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_ENTER_ROOM::CopyFrom(const STC_ENTER_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_ENTER_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_ENTER_ROOM::IsInitialized() const {
  return true;
}

void STC_ENTER_ROOM::InternalSwap(STC_ENTER_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_ENTER_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[7]);
}

// ===================================================================

class CTS_ENTER_GAME::_Internal {
 public:
};

CTS_ENTER_GAME::CTS_ENTER_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_ENTER_GAME)
}
CTS_ENTER_GAME::CTS_ENTER_GAME(const CTS_ENTER_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_ENTER_GAME* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playerindex_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.playerindex_ = from._impl_.playerindex_;
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_ENTER_GAME)
}

inline void CTS_ENTER_GAME::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playerindex_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_ENTER_GAME::~CTS_ENTER_GAME() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_ENTER_GAME)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_ENTER_GAME::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CTS_ENTER_GAME::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_ENTER_GAME::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playerindex_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_ENTER_GAME::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 playerIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.playerindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_ENTER_GAME::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerIndex = 1;
  if (this->_internal_playerindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_playerindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_ENTER_GAME)
  return target;
}

size_t CTS_ENTER_GAME::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_ENTER_GAME)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 playerIndex = 1;
  if (this->_internal_playerindex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_playerindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_ENTER_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_ENTER_GAME::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_ENTER_GAME::GetClassData() const { return &_class_data_; }


void CTS_ENTER_GAME::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_ENTER_GAME*>(&to_msg);
  auto& from = static_cast<const CTS_ENTER_GAME&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_ENTER_GAME)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_playerindex() != 0) {
    _this->_internal_set_playerindex(from._internal_playerindex());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_ENTER_GAME::CopyFrom(const CTS_ENTER_GAME& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_ENTER_GAME)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_ENTER_GAME::IsInitialized() const {
  return true;
}

void CTS_ENTER_GAME::InternalSwap(CTS_ENTER_GAME* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.playerindex_, other->_impl_.playerindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_ENTER_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[8]);
}

// ===================================================================

class STC_ENTER_GAME::_Internal {
 public:
  static const ::Protocol::ObjectInfo& player(const STC_ENTER_GAME* msg);
};

const ::Protocol::ObjectInfo&
STC_ENTER_GAME::_Internal::player(const STC_ENTER_GAME* msg) {
  return *msg->_impl_.player_;
}
void STC_ENTER_GAME::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
STC_ENTER_GAME::STC_ENTER_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_ENTER_GAME)
}
STC_ENTER_GAME::STC_ENTER_GAME(const STC_ENTER_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_ENTER_GAME* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::ObjectInfo(*from._impl_.player_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_ENTER_GAME)
}

inline void STC_ENTER_GAME::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_ENTER_GAME::~STC_ENTER_GAME() {
  // @@protoc_insertion_point(destructor:Protocol.STC_ENTER_GAME)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_ENTER_GAME::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void STC_ENTER_GAME::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_ENTER_GAME::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_ENTER_GAME::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ObjectInfo player = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_ENTER_GAME::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .Protocol.ObjectInfo player = 2;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_ENTER_GAME)
  return target;
}

size_t STC_ENTER_GAME::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_ENTER_GAME)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.ObjectInfo player = 2;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_ENTER_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_ENTER_GAME::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_ENTER_GAME::GetClassData() const { return &_class_data_; }


void STC_ENTER_GAME::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_ENTER_GAME*>(&to_msg);
  auto& from = static_cast<const STC_ENTER_GAME&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_ENTER_GAME)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::ObjectInfo::MergeFrom(
        from._internal_player());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_ENTER_GAME::CopyFrom(const STC_ENTER_GAME& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_ENTER_GAME)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_ENTER_GAME::IsInitialized() const {
  return true;
}

void STC_ENTER_GAME::InternalSwap(STC_ENTER_GAME* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STC_ENTER_GAME, _impl_.success_)
      + sizeof(STC_ENTER_GAME::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(STC_ENTER_GAME, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_ENTER_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[9]);
}

// ===================================================================

class CTS_LEAVE_ROOM::_Internal {
 public:
};

CTS_LEAVE_ROOM::CTS_LEAVE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_LEAVE_ROOM)
}
CTS_LEAVE_ROOM::CTS_LEAVE_ROOM(const CTS_LEAVE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_LEAVE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_LEAVE_ROOM)
}

inline void CTS_LEAVE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_LEAVE_ROOM::~CTS_LEAVE_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_LEAVE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_LEAVE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CTS_LEAVE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_LEAVE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_LEAVE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_LEAVE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_LEAVE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_LEAVE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_LEAVE_ROOM)
  return target;
}

size_t CTS_LEAVE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_LEAVE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_LEAVE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_LEAVE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_LEAVE_ROOM::GetClassData() const { return &_class_data_; }


void CTS_LEAVE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_LEAVE_ROOM*>(&to_msg);
  auto& from = static_cast<const CTS_LEAVE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_LEAVE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_LEAVE_ROOM::CopyFrom(const CTS_LEAVE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_LEAVE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_LEAVE_ROOM::IsInitialized() const {
  return true;
}

void CTS_LEAVE_ROOM::InternalSwap(CTS_LEAVE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_LEAVE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[10]);
}

// ===================================================================

class STC_LEAVE_ROOM::_Internal {
 public:
};

STC_LEAVE_ROOM::STC_LEAVE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_LEAVE_ROOM)
}
STC_LEAVE_ROOM::STC_LEAVE_ROOM(const STC_LEAVE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_LEAVE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_LEAVE_ROOM)
}

inline void STC_LEAVE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_LEAVE_ROOM::~STC_LEAVE_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.STC_LEAVE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_LEAVE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void STC_LEAVE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_LEAVE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_LEAVE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_LEAVE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_LEAVE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_LEAVE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_LEAVE_ROOM)
  return target;
}

size_t STC_LEAVE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_LEAVE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_LEAVE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_LEAVE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_LEAVE_ROOM::GetClassData() const { return &_class_data_; }


void STC_LEAVE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_LEAVE_ROOM*>(&to_msg);
  auto& from = static_cast<const STC_LEAVE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_LEAVE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_LEAVE_ROOM::CopyFrom(const STC_LEAVE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_LEAVE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_LEAVE_ROOM::IsInitialized() const {
  return true;
}

void STC_LEAVE_ROOM::InternalSwap(STC_LEAVE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_LEAVE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[11]);
}

// ===================================================================

class CTS_LEAVE_GAME::_Internal {
 public:
};

CTS_LEAVE_GAME::CTS_LEAVE_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_LEAVE_GAME)
}
CTS_LEAVE_GAME::CTS_LEAVE_GAME(const CTS_LEAVE_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CTS_LEAVE_GAME* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_LEAVE_GAME)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_LEAVE_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_LEAVE_GAME::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CTS_LEAVE_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[12]);
}

// ===================================================================

class STC_LEAVE_GAME::_Internal {
 public:
};

STC_LEAVE_GAME::STC_LEAVE_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_LEAVE_GAME)
}
STC_LEAVE_GAME::STC_LEAVE_GAME(const STC_LEAVE_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  STC_LEAVE_GAME* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_LEAVE_GAME)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_LEAVE_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_LEAVE_GAME::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata STC_LEAVE_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[13]);
}

// ===================================================================

class STC_SPAWN::_Internal {
 public:
};

void STC_SPAWN::clear_players() {
  _impl_.players_.Clear();
}
STC_SPAWN::STC_SPAWN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_SPAWN)
}
STC_SPAWN::STC_SPAWN(const STC_SPAWN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_SPAWN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){from._impl_.players_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_SPAWN)
}

inline void STC_SPAWN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_SPAWN::~STC_SPAWN() {
  // @@protoc_insertion_point(destructor:Protocol.STC_SPAWN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_SPAWN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.players_.~RepeatedPtrField();
}

void STC_SPAWN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_SPAWN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_SPAWN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_SPAWN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.ObjectInfo players = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_SPAWN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_SPAWN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.ObjectInfo players = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_SPAWN)
  return target;
}

size_t STC_SPAWN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_SPAWN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.ObjectInfo players = 1;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_impl_.players_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_SPAWN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_SPAWN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_SPAWN::GetClassData() const { return &_class_data_; }


void STC_SPAWN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_SPAWN*>(&to_msg);
  auto& from = static_cast<const STC_SPAWN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_SPAWN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.players_.MergeFrom(from._impl_.players_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_SPAWN::CopyFrom(const STC_SPAWN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_SPAWN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_SPAWN::IsInitialized() const {
  return true;
}

void STC_SPAWN::InternalSwap(STC_SPAWN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_SPAWN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[14]);
}

// ===================================================================

class STC_DESPAWN::_Internal {
 public:
};

STC_DESPAWN::STC_DESPAWN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_DESPAWN)
}
STC_DESPAWN::STC_DESPAWN(const STC_DESPAWN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_DESPAWN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_ids_){from._impl_.object_ids_}
    , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_DESPAWN)
}

inline void STC_DESPAWN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_ids_){arena}
    , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_DESPAWN::~STC_DESPAWN() {
  // @@protoc_insertion_point(destructor:Protocol.STC_DESPAWN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_DESPAWN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.object_ids_.~RepeatedField();
}

void STC_DESPAWN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_DESPAWN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_DESPAWN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_DESPAWN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 object_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_object_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_object_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_DESPAWN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_DESPAWN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 object_ids = 1;
  {
    int byte_size = _impl_._object_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_object_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_DESPAWN)
  return target;
}

size_t STC_DESPAWN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_DESPAWN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 object_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.object_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._object_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_DESPAWN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_DESPAWN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_DESPAWN::GetClassData() const { return &_class_data_; }


void STC_DESPAWN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_DESPAWN*>(&to_msg);
  auto& from = static_cast<const STC_DESPAWN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_DESPAWN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.object_ids_.MergeFrom(from._impl_.object_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_DESPAWN::CopyFrom(const STC_DESPAWN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_DESPAWN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_DESPAWN::IsInitialized() const {
  return true;
}

void STC_DESPAWN::InternalSwap(STC_DESPAWN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.object_ids_.InternalSwap(&other->_impl_.object_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_DESPAWN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[15]);
}

// ===================================================================

class CTS_MOVE::_Internal {
 public:
  static const ::Protocol::PosInfo& info(const CTS_MOVE* msg);
};

const ::Protocol::PosInfo&
CTS_MOVE::_Internal::info(const CTS_MOVE* msg) {
  return *msg->_impl_.info_;
}
void CTS_MOVE::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
CTS_MOVE::CTS_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_MOVE)
}
CTS_MOVE::CTS_MOVE(const CTS_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::Protocol::PosInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_MOVE)
}

inline void CTS_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CTS_MOVE::~CTS_MOVE() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void CTS_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.PosInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.PosInfo info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_MOVE)
  return target;
}

size_t CTS_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PosInfo info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_MOVE::GetClassData() const { return &_class_data_; }


void CTS_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_MOVE*>(&to_msg);
  auto& from = static_cast<const CTS_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::Protocol::PosInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_MOVE::CopyFrom(const CTS_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_MOVE::IsInitialized() const {
  return true;
}

void CTS_MOVE::InternalSwap(CTS_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[16]);
}

// ===================================================================

class STC_MOVE::_Internal {
 public:
  static const ::Protocol::PosInfo& info(const STC_MOVE* msg);
};

const ::Protocol::PosInfo&
STC_MOVE::_Internal::info(const STC_MOVE* msg) {
  return *msg->_impl_.info_;
}
void STC_MOVE::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
STC_MOVE::STC_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_MOVE)
}
STC_MOVE::STC_MOVE(const STC_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::Protocol::PosInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_MOVE)
}

inline void STC_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

STC_MOVE::~STC_MOVE() {
  // @@protoc_insertion_point(destructor:Protocol.STC_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void STC_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.PosInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.PosInfo info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_MOVE)
  return target;
}

size_t STC_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PosInfo info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_MOVE::GetClassData() const { return &_class_data_; }


void STC_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_MOVE*>(&to_msg);
  auto& from = static_cast<const STC_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::Protocol::PosInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_MOVE::CopyFrom(const STC_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_MOVE::IsInitialized() const {
  return true;
}

void STC_MOVE::InternalSwap(STC_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[17]);
}

// ===================================================================

class CTS_CHAT::_Internal {
 public:
};

CTS_CHAT::CTS_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.CTS_CHAT)
}
CTS_CHAT::CTS_CHAT(const CTS_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CTS_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.CTS_CHAT)
}

inline void CTS_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CTS_CHAT::~CTS_CHAT() {
  // @@protoc_insertion_point(destructor:Protocol.CTS_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CTS_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void CTS_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CTS_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CTS_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CTS_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.CTS_CHAT.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CTS_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CTS_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.CTS_CHAT.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CTS_CHAT)
  return target;
}

size_t CTS_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CTS_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CTS_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CTS_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CTS_CHAT::GetClassData() const { return &_class_data_; }


void CTS_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CTS_CHAT*>(&to_msg);
  auto& from = static_cast<const CTS_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CTS_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CTS_CHAT::CopyFrom(const CTS_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CTS_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTS_CHAT::IsInitialized() const {
  return true;
}

void CTS_CHAT::InternalSwap(CTS_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CTS_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[18]);
}

// ===================================================================

class STC_CHAT::_Internal {
 public:
};

STC_CHAT::STC_CHAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.STC_CHAT)
}
STC_CHAT::STC_CHAT(const STC_CHAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  STC_CHAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.playerid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.playerid_ = from._impl_.playerid_;
  // @@protoc_insertion_point(copy_constructor:Protocol.STC_CHAT)
}

inline void STC_CHAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.playerid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

STC_CHAT::~STC_CHAT() {
  // @@protoc_insertion_point(destructor:Protocol.STC_CHAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void STC_CHAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void STC_CHAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void STC_CHAT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.STC_CHAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.playerid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STC_CHAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 playerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.playerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.STC_CHAT.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* STC_CHAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.STC_CHAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerId = 1;
  if (this->_internal_playerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_playerid(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.STC_CHAT.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.STC_CHAT)
  return target;
}

size_t STC_CHAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.STC_CHAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // uint64 playerId = 1;
  if (this->_internal_playerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_playerid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData STC_CHAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    STC_CHAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*STC_CHAT::GetClassData() const { return &_class_data_; }


void STC_CHAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<STC_CHAT*>(&to_msg);
  auto& from = static_cast<const STC_CHAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.STC_CHAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_playerid() != 0) {
    _this->_internal_set_playerid(from._internal_playerid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void STC_CHAT::CopyFrom(const STC_CHAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.STC_CHAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STC_CHAT::IsInitialized() const {
  return true;
}

void STC_CHAT::InternalSwap(STC_CHAT* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.playerid_, other->_impl_.playerid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata STC_CHAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::CTS_LOGIN*
Arena::CreateMaybeMessage< ::Protocol::CTS_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_LOGIN*
Arena::CreateMaybeMessage< ::Protocol::STC_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_ENTER_LOBBY*
Arena::CreateMaybeMessage< ::Protocol::CTS_ENTER_LOBBY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_ENTER_LOBBY >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_ENTER_LOBBY*
Arena::CreateMaybeMessage< ::Protocol::STC_ENTER_LOBBY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_ENTER_LOBBY >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_JOIN_OR_CREATE_ROOM*
Arena::CreateMaybeMessage< ::Protocol::CTS_JOIN_OR_CREATE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_JOIN_OR_CREATE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_JOIN_OR_CREATE_ROOM*
Arena::CreateMaybeMessage< ::Protocol::STC_JOIN_OR_CREATE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_JOIN_OR_CREATE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_ENTER_ROOM*
Arena::CreateMaybeMessage< ::Protocol::CTS_ENTER_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_ENTER_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_ENTER_ROOM*
Arena::CreateMaybeMessage< ::Protocol::STC_ENTER_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_ENTER_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_ENTER_GAME*
Arena::CreateMaybeMessage< ::Protocol::CTS_ENTER_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_ENTER_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_ENTER_GAME*
Arena::CreateMaybeMessage< ::Protocol::STC_ENTER_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_ENTER_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_LEAVE_ROOM*
Arena::CreateMaybeMessage< ::Protocol::CTS_LEAVE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_LEAVE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_LEAVE_ROOM*
Arena::CreateMaybeMessage< ::Protocol::STC_LEAVE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_LEAVE_ROOM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_LEAVE_GAME*
Arena::CreateMaybeMessage< ::Protocol::CTS_LEAVE_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_LEAVE_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_LEAVE_GAME*
Arena::CreateMaybeMessage< ::Protocol::STC_LEAVE_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_LEAVE_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_SPAWN*
Arena::CreateMaybeMessage< ::Protocol::STC_SPAWN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_SPAWN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_DESPAWN*
Arena::CreateMaybeMessage< ::Protocol::STC_DESPAWN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_DESPAWN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_MOVE*
Arena::CreateMaybeMessage< ::Protocol::CTS_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_MOVE*
Arena::CreateMaybeMessage< ::Protocol::STC_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::CTS_CHAT*
Arena::CreateMaybeMessage< ::Protocol::CTS_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::CTS_CHAT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::STC_CHAT*
Arena::CreateMaybeMessage< ::Protocol::STC_CHAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::STC_CHAT >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
